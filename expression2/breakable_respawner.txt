@name Breakable respawner
@inputs 
@outputs 
@persist [T SpawnTable]:table
@trigger 

if(first()){
    T = table()
    SpawnTable = table()
}

event entityDamage(Victim:entity, Damage:damage) {
    if(Victim:maxHealth() & Victim:owner() == owner() & Victim:type() == "prop_physics"){
        timer(Victim:id():toString(), 0)
        T[Victim:id():toString(), array] = array(Victim:model(), Victim:pos(), Victim:angles(), Victim:isFrozen())
    }
}
Clk = clkName()
if(Clk:find("respawn")){
    local Entry = Clk:replace("respawn", "")
    SpawnTable[Entry, array] = T[Entry, array]
}

event tick(){
    if(SpawnTable:count()){
        foreach(K:string, V:array = SpawnTable){
            if(!propCanCreate()){ 
                print("aaaaaaaaaaA")
                break
            }
            
            local Ent = propSpawn(V[1, string], V[2, vector], V[3, angle], V[4, number])
            Ent:emitSound("items/spawn_item.wav")
            Ent:setMaterial("models/alyx/emptool_glow")
            T[K, entity] = Ent
            SpawnTable:remove(K)
            
            timer("killglow" + K, 500)
        }
    }
}

if(Clk:find("killglow")){
    local Entry = Clk:replace("killglow", "")
    T[Entry, entity]:setMaterial("")
    T:remove(Entry)
}

ID = Clk:toNumber()
if(ID){
    E = entity(ID)

    if(!E:isValid()){
        timer("respawn" + ID, 3000)
    }
}
