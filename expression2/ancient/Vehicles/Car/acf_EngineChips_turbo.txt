
@name acf_EngineChips_turbo
@inputs Rpm W S Active
@outputs TqAdd MaxRpmAdd LimitRpmAdd Play TurboP
@persist TqAddValue MaxRpmAddValue Active2
@persist LimitRpmAddValue AllowT Tmode SpoolSpeed
@persist RpmKick IdleRpm TModel:string CModel:string
@persist TSize CSize HSize Time AngleC TDistance TWidth TWidth2
@trigger 
if (dupefinished()) {reset()}

if(first()|duped()){
    
        #Torque Adding
        TqAddValue=10       #in Nm 
        #MaxRpm Adding
        MaxRpmAddValue=2500  #in Rpm
        #LimitRpm Adding
        LimitRpmAddValue=2500 #in Rpm
        
        
        #Turbo Rpm Engage
        RpmKick=1900
        #Engine Idle Rpm
        IdleRpm=1100
        #Turbo Spool Speed
        SpoolSpeed=2
        
        
        #compressor material model
        CModel="phoenix_storms/gear"
        #turbine material model
        TModel="models/props_wasteland/metal_tram001a"
        #Compressor Size
        CSize=1.4
        #Turbine Size
        TSize=0.9
        #Compressor Angle
        AngleC=315
        #Turbine width
        TWidth=1.4
        
        
        
        
        ###FIXED####
        #Center/Heart size
        if(CSize==TSize){HSize=CSize}
        if(CSize>TSize){HSize=TSize}
        if(CSize<TSize){HSize=CSize}
        #distance bethween turbine and compressor
        #TDistance=8
        if(TWidth<=1.45){TWidth2=TWidth}
        if(TWidth>1.45){TWidth2=TWidth*0.65}
        if(CSize==TSize){TDistance=TSize*8*TWidth2}
        if(CSize>TSize){TDistance=TSize*8*TWidth2}
        if(CSize<TSize){TDistance=CSize*8*TWidth2}
        
        
        #Do not change that
        Time=0
        
        #holograms
        holoCreate(1)#compressor
        holoCreate(2)#compressor inlet
        holoCreate(3)#compressor outlet
        holoCreate(4)#heart
        holoCreate(5)#heart blockguard compressor
        holoCreate(6)#heart blockguard turbine
        holoCreate(7)#turbine
        holoCreate(8)#turbine outlet
        holoCreate(9)#turbine intlet
        holoCreate(10)#turbine intlet2
        holoCreate(11)#compressor wheel
        holoCreate(12)#turbine wheel
        holoCreate(13)#hidden prop for compressor angle
        
        holoPos(1, entity():toWorld(vec(0,0,TDistance/2)))
        holoPos(2, entity():toWorld(vec(0,0,TDistance*0.75)))
        holoPos(3, entity():toWorld(vec(4.5*CSize,4*CSize,TDistance/2)))
        holoPos(4, entity():toWorld(vec(0,0,0)))
        holoPos(5, entity():toWorld(vec(0,0,TDistance*0.3125)))
        holoPos(6, entity():toWorld(vec(0,0,TDistance/-4)))
        holoPos(7, entity():toWorld(vec(0,0,TDistance/-2)))
        holoPos(8, entity():toWorld(vec(0,0,TDistance*-0.75)))
        holoPos(9, entity():toWorld(vec(-4*TSize,3.5*TSize,TDistance/-2)))
        holoPos(10, entity():toWorld(vec(-4*TSize,7*TSize,TDistance/-2)))
        holoPos(11, entity():toWorld(vec(0,0,TDistance*0.525)))
        holoPos(12, entity():toWorld(vec(0,0,TDistance*-0.6875)))
        holoPos(13, entity():toWorld(vec(0,0,0)))
        
        holoScale(1,vec(1,1,1)*CSize)
        holoScale(2,vec(0.6,0.6,2)*CSize)
        holoScale(3,vec(0.24,0.24,0.8)*CSize)
        holoScale(4,vec(0.4*HSize,0.4*HSize,TDistance*0.0625))
        holoScale(5,vec(0.8,0.8,0.05)*CSize)
        holoScale(6,vec(0.8,0.8,0.05*TWidth)*TSize)
        holoScale(7,vec(1,1,1.4*TWidth)*TSize)
        holoScale(8,vec(0.8,0.8,1.3*TWidth)*TSize)
        holoScale(9,vec(0.35,0.35*TWidth,0.6)*TSize)
        holoScale(10,vec(0.4,0.05,0.5*TWidth)*TSize)
        holoScale(11,vec(0.35,0.35,0.35)*CSize)
        holoScale(12,vec(0.35*TWidth,0.35,0.35)*TSize)
        holoScale(13,vec(0.05,0.05,0.05))
        
        holoColor(1,vec(170,170,170))
        holoColor(2,vec(170,170,170))
        holoColor(3,vec(255,255,255))
        holoColor(4,vec(20,20,20))
        holoColor(5,vec(200,200,200))
        holoColor(6,vec(200,200,200))
        holoColor(7,vec(100,100,100))
        holoColor(8,vec(100,100,100))
        holoColor(9,vec(150,150,150))
        holoColor(10,vec(150,150,150))
        holoColor(11,vec(50,50,50))
        holoColor(12,vec(50,50,50))
        holoColor(13,vec4(0,0,0,0))
        
        holoAng(1,entity():toWorld(ang(0,0,0)))
        holoAng(2,entity():toWorld(ang(0,0,0)))
        holoAng(3,entity():toWorld(ang(0,0,90)))
        holoAng(4,entity():toWorld(ang(0,0,0)))
        holoAng(5,entity():toWorld(ang(0,0,0)))
        holoAng(6,entity():toWorld(ang(0,0,0)))
        holoAng(7,entity():toWorld(ang(0,0,0)))
        holoAng(8,entity():toWorld(ang(0,0,0)))
        holoAng(9,entity():toWorld(ang(0,0,90)))
        holoAng(10,entity():toWorld(ang(0,0,0)))
        holoAng(11,entity():toWorld(ang(-90,0,0)))
        holoAng(12,entity():toWorld(ang(90,0,0)))
        holoAng(13,entity():toWorld(ang(0,0,0)))
        
        holoModel(1,"hq_torus_thick")
        holoModel(2,"hq_torus")
        holoModel(3,"hq_cylinder")
        holoModel(4,"hq_cylinder")
        holoModel(5,"hq_cylinder")
        holoModel(6,"hq_cylinder")
        holoModel(7,"hq_torus_thick")
        holoModel(8,"hq_torus_thick")
        holoModel(9,"hq_cylinder")
        holoModel(10,"hq_square")
        holoModel(11,"models/XQM/jetenginepropeller.mdl")
        holoModel(12,"models/XQM/jetenginepropeller.mdl")
        holoModel(13,"hq_square")
        
        holoMaterial(1,CModel)
        holoMaterial(2,CModel)
        holoMaterial(3,CModel)
        holoMaterial(4,"phoenix_storms/gear")
        holoMaterial(5,"phoenix_storms/gear")
        holoMaterial(6,TModel)
        holoMaterial(7,TModel)
        holoMaterial(8,TModel)
        holoMaterial(9,TModel)
        holoMaterial(10,TModel)
        holoMaterial(11,"phoenix_storms/gear")
        holoMaterial(12,"phoenix_storms/gear")
        
        holoParent(1, entity())
        holoParent(2, entity())
        holoParent(3, holoEntity(13))
        holoParent(4, entity())
        holoParent(5, entity())
        holoParent(6, entity())
        holoParent(7, entity())
        holoParent(8, entity())
        holoParent(9, entity())
        holoParent(10, entity())
        holoParent(11, entity())
        holoParent(12, holoEntity(11))
        holoParent(13, entity())
    
    
    
    
############################################################### 
### DON'T EDIT ANYTHING BELLOW OR YOU CAN BROKE THE CODE ######
###############################################################

entity():soundPlay(1,0,"/ambient/machines/gas_loop_1.wav")
TurboP=0
AllowT=0
Tmode=0
MaxRpmAdd=MaxRpmAddValue
LimitRpmAdd=LimitRpmAddValue
    
}#finish first()

interval(80)





if(Rpm<RpmKick){
    #Rpm idle
        if(Rpm<IdleRpm+50){
        TurboP=0
        holoAng(13,entity():toWorld(ang(0,AngleC,0)))
        }
    
    Active2=0
    if(W==1|S==1){
    TurboP=Rpm/60   
    } 
        
}

#when active
if(Rpm>=RpmKick){
    if(W==1|S==1){
    if(TurboP<50){TurboP=TurboP+(1.5*SpoolSpeed)}
    if(TurboP>=50&TurboP<150){TurboP=TurboP+(2*SpoolSpeed)}
    if(TurboP>=150&TurboP<200){TurboP=TurboP+(5.5*SpoolSpeed)}
    if(TurboP>=200&TurboP<250){TurboP=TurboP+(10*SpoolSpeed)}
    if(TurboP>=250&TurboP<300){TurboP=TurboP+(16*SpoolSpeed)}
    if(TurboP>=300){TurboP=300}
    Active2=1
    }
}


#Blow off valve
AllowT=AllowT+1
if(W==0&S==0){
    TurboP=0
    if(Tmode==0){AllowT=0}
    if(TurboP==0){Play=1,Tmode=1}
}
if(W|S&Tmode==1&AllowT>=40){Tmode=0,AllowT=0,Play=0}

#Apply Torque to Engine and Sound Pitch
TqAdd=TqAddValue*(TurboP/300)
soundPitch(1,TurboP)

#color changing
holoColor(6,vec(100+(TurboP/2),100,100))
holoColor(7,vec(50+(TurboP/1.5),50,50))
holoColor(8,vec(50+(TurboP/1.5),50,50))
holoColor(9,vec(50+(TurboP/1.5),50,50))
holoColor(10,vec(50+(TurboP/1.5),50,50))

#Rotating wheel
Time=Time+(10+TurboP*2)*Active
Angle=entity():isWeldedTo():angles():yaw()-Time
holoAng(11,entity():toWorld(ang(-90,0,-Angle)))
#holoAng(12,entity():toWorld(ang(90,0,Angle)))
#holoPos(11,entity():toWorld(vec(0,0,TDistance*0.525)))
#holoPos(12,entity():toWorld(vec(0,0,TDistance*-0.6875)))
