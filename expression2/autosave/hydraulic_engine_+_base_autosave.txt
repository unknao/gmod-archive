@name Hydraulic engine + Base
@inputs [Base Crank]:entity W S Handbrake
@outputs Bearing Constant Damping H1 H2 H3 H4 H5 RPM HandbrakeOutput
@persist [TW]:vector Dist T WS Handbrake_Anim
@trigger


if(first() | dupefinished()){
    TW = Base:toLocal(Crank:pos()) - Base:toLocalAxis(vec(0, 0, 1))
    Constant = 10000
    Damping = 0.0001
    Dist = 18
    
    Crank:propInertia(vec(5, 5, 3))
    Base:propInertia(vec(167.224, 561.569, 585.938) * 2)
    
    foreach(_, E:entity = Base:getConnectedEntities()){
        #Parented Seat Fix
        if(E:parent()){ 
            if(E:type() == "prop_vehicle_prisoner_pod"){
                E["PSF", number] = 1
            }
            continue
        }else{
            #Wheel Inertia
            if(E:model() == "models/sprops/trans/wheel_b/t_wheel35.mdl"){ 
                E:propInertia(vec(5, 5, 3)) 
                continue
            }
        }
    }
    Crank:soundPlay("engine", 0, "acf_extra/vehiclefx/engines/v12/zonda_on_high.wav")
    soundVolume("engine", 0.2)
    
    #Handbrake
    HB = holoCreate(5, Base:toWorld(vec(5, 0, 17)), vec(), Base:toWorld(ang(0, 0, 0)))
    holoParent(5, Base)
    
    holoCreate(6, HB:toWorld(vec(-6.164, 0, 0)), vec(1), HB:toWorld(ang(0, 90, 0)), vec(255), "models/props_c17/trappropeller_lever.mdl")
    holoParent(6, HB)
    
    HandbrakeOutput = 0
}

if(~W | ~S){
    WS = W - S
    
    soundVolume("engine", 0.2 + abs(WS) * 0.8, 0.1)   
}

event tick(){
    T = -WS * 120 * 66 * tickInterval()
    Bearing = Crank:bearing(Base:toWorld(TW)) + Crank:angVel():yaw() * tickInterval()
    
    H1 = Dist + sin(Bearing) * T
    H2 = Dist + sin(Bearing + 72) * T
    H3 = Dist + sin(Bearing + 144) * T
    H4 = Dist + sin(Bearing + 216) * T    
    H5 = Dist + sin(Bearing + 288) * T
    
    RPM = abs(Crank:angVel():yaw() / 6)
    soundPitch("engine", RPM * 0.2, 0.3)
    
    Handbrake_Anim += clamp((HandbrakeOutput * 35 - Handbrake_Anim) * 0.5, -10, 10) * tickInterval() * 40
    if(changed(Handbrake_Anim)){
        holoAng(5, Base:toWorld(ang(Handbrake_Anim, 0, 0)))
    }
}

event playerEnteredVehicle(_:entity, Vehicle:entity){
    if(Vehicle["PSF", number]){
        Vehicle:lockPod(1)
    }
}

event playerLeftVehicle(_:entity, Vehicle:entity){
    if(Vehicle["PSF", number]){
        timer(Vehicle:id():toString(), 500)
    }
}

if(clkName():toNumber()){
    entity(clkName():toNumber()):lockPod(0)
}

if(~Handbrake & Handbrake){
    HandbrakeOutput = !HandbrakeOutput
    Base:soundPlay("Handbrake", 0.5, HandbrakeOutput ? "physics/wood/wood_strain8.wav" : "physics/cardboard/cardboard_box_impact_soft5.wav")
}
